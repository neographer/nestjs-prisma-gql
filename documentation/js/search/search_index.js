var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.469,1,1.675]],["body/controllers/AppController.html",[0,2.209,1,2.519,2,1.702,3,0.395,4,0.325,5,0.325,6,2.64,7,0.634,8,1.73,9,4.027,10,1.503,11,0.045,12,0.825,13,3.248,14,1.333,15,1.951,16,0.712,17,0.933,18,2.453,19,2.64,20,0.395,21,0.071,22,2.24,23,1.702,24,1.503,25,3.248,26,0.026,27,0.034,28,0.026]],["title/modules/AppModule.html",[29,1.298,30,1.933]],["body/modules/AppModule.html",[1,2.611,2,2.015,3,0.344,4,0.283,5,0.283,11,0.046,16,0.875,17,0.812,18,2.29,19,2.298,20,0.344,21,0.062,26,0.023,27,0.031,28,0.023,29,1.78,30,2.652,31,1.309,32,2.828,33,2.652,34,3.845,35,2.611,36,2.802,37,2.828,38,1.309,39,2.298,40,2.828,41,2.828,42,2.828,43,2.828,44,2.828,45,2.828,46,2.828,47,2.828,48,2.828,49,2.828,50,2.828,51,2.828,52,2.828]],["title/injectables/AppService.html",[18,1.469,53,0.908]],["body/injectables/AppService.html",[3,0.422,4,0.347,5,0.347,7,0.676,8,1.804,9,4.126,11,0.045,12,0.88,14,1.422,15,2.034,16,0.586,17,0.995,18,2.303,20,0.422,21,0.075,24,1.604,26,0.028,27,0.035,28,0.028,53,1.423,54,1.816,55,2.817,56,3.465,57,3.465,58,3.465]],["title/classes/CreateEmployeeDto.html",[21,0.061,59,1.298]],["body/classes/CreateEmployeeDto.html",[3,0.376,4,0.309,5,0.309,7,0.603,11,0.043,12,1.234,15,2.249,20,0.376,21,0.067,26,0.025,27,0.033,28,0.025,59,1.888,60,1.126,61,4.107,62,2.13,63,2.438,64,4.568,65,3.15,66,2.394,67,4.568,68,1.574,69,4.08,70,3.089,71,1.675,72,3.089,73,3.089,74,3.089]],["title/classes/CreateUserInput.html",[21,0.061,75,1.298]],["body/classes/CreateUserInput.html",[3,0.262,4,0.216,5,0.216,7,0.42,10,2.272,11,0.045,12,1.246,15,2.419,16,0.364,20,0.262,21,0.047,26,0.017,27,0.026,28,0.017,38,0.997,60,0.785,63,1.894,65,2.594,68,1.59,71,1.703,75,1.467,76,4.072,77,1.485,78,3.058,79,3.058,80,3.058,81,3.058,82,3.058,83,3.058,84,3.058,85,3.747,86,2.153,87,2.153,88,2.153,89,2.153,90,2.153,91,2.153,92,2.153,93,2.153,94,2.577,95,1.287]],["title/classes/Employee.html",[21,0.061,96,1.933]],["body/classes/Employee.html",[3,0.497,4,0.409,5,0.409,11,0.042,20,0.497,21,0.089,26,0.033,27,0.039,28,0.033,60,1.491,96,3.355,97,3.323]],["title/controllers/EmployeesController.html",[0,1.469,98,1.675]],["body/controllers/EmployeesController.html",[0,0.961,2,0.961,3,0.223,4,0.184,5,0.184,7,0.358,8,1.153,10,1.911,11,0.046,12,1.048,14,1.694,15,2.219,16,0.697,17,0.527,20,0.223,21,0.04,22,1.264,23,0.961,24,1.911,26,0.015,27,0.023,28,0.015,59,2.016,66,2.006,68,1.24,98,1.679,99,1.49,100,1.833,101,1.833,102,1.472,103,2.288,104,1.679,105,1.937,106,1.937,107,1.49,108,3.415,109,1.833,110,2.288,111,2.288,112,1.833,113,1.096,114,2.809,115,1.833,116,2.016,117,1.264,118,2.809,119,1.833,120,1.264,121,2.451,122,2.809,123,1.833,124,2.809,125,1.833,126,1.833,127,1.833,128,1.79,129,1.49,130,1.096,131,1.937,132,1.096,133,1.833,134,1.264,135,1.833,136,1.833,137,1.833,138,1.833,139,1.833,140,1.833,141,1.833,142,1.833,143,1.833,144,1.833,145,1.833]],["title/modules/EmployeesModule.html",[29,1.298,35,1.675]],["body/modules/EmployeesModule.html",[2,2.243,3,0.404,4,0.333,5,0.333,11,0.045,16,0.845,17,0.955,20,0.404,21,0.072,26,0.027,27,0.034,28,0.027,29,1.981,31,1.538,33,2.951,35,2.557,98,2.828,128,2.48,129,2.702,146,3.323,147,1.943,148,3.323,149,1.986]],["title/injectables/EmployeesService.html",[53,0.908,128,1.469]],["body/injectables/EmployeesService.html",[3,0.225,4,0.185,5,0.185,7,0.361,8,1.162,11,0.046,12,1.11,14,1.702,16,0.65,17,0.532,20,0.225,21,0.04,23,0.97,24,1.919,26,0.015,27,0.023,28,0.015,53,0.917,54,0.97,59,2.023,66,2.173,68,1.343,71,1.973,102,1.483,103,2.299,104,1.691,105,1.952,106,1.952,107,2.301,110,2.477,111,2.477,113,1.691,116,2.225,117,1.952,120,1.952,121,2.458,128,1.483,130,1.106,131,1.952,132,1.106,147,1.794,149,1.106,150,1.505,151,1.691,152,1.505,153,1.851,154,1.851,155,1.851,156,1.851,157,1.851,158,1.851,159,1.505,160,1.851,161,2.301,162,1.851,163,1.851,164,1.851,165,1.851]],["title/injectables/PrismaService.html",[53,0.908,147,1.151]],["body/injectables/PrismaService.html",[3,0.344,4,0.283,5,0.283,7,0.552,8,1.578,11,0.045,12,1.109,14,1.578,16,0.65,17,0.812,20,0.344,21,0.062,26,0.023,27,0.031,28,0.023,53,1.245,54,1.482,147,1.578,151,2.611,166,2.298,167,2.652,168,4.369,169,5.058,170,5.058,171,5.058,172,2.828,173,2.828,174,2.828,175,2.298,176,2.828,177,2.828,178,3.845,179,2.828,180,2.828]],["title/classes/UpdateEmployeeDto.html",[21,0.061,121,1.469]],["body/classes/UpdateEmployeeDto.html",[3,0.452,4,0.372,5,0.372,11,0.044,16,0.776,20,0.452,21,0.081,26,0.03,27,0.037,28,0.03,59,1.719,60,1.354,62,2.562,102,1.947,121,2.406,131,2.562,134,2.562,167,2.562,181,3.019,182,3.019,183,3.714]],["title/classes/UpdateUserInput.html",[21,0.061,184,1.469]],["body/classes/UpdateUserInput.html",[3,0.391,4,0.321,5,0.321,7,0.627,10,1.486,11,0.045,12,0.815,16,0.707,20,0.391,21,0.07,26,0.026,27,0.034,28,0.026,38,1.486,60,1.171,63,2.501,68,1.04,71,1.718,75,1.486,77,2.214,85,2.886,94,3.402,95,2.501,102,1.683,116,2.155,167,2.214,182,2.61,184,2.193,185,3.402,186,2.61,187,3.211,188,2.214,189,3.211]],["title/classes/User.html",[21,0.061,190,1.675]],["body/classes/User.html",[3,0.251,4,0.206,5,0.206,7,0.402,10,2.292,11,0.045,12,1.257,15,2.397,16,0.348,20,0.251,21,0.045,26,0.017,27,0.025,28,0.017,38,0.953,60,0.751,63,1.833,65,2.527,68,1.604,71,1.868,78,2.979,79,2.979,80,2.979,81,2.979,82,2.979,83,2.979,84,2.979,85,3.743,95,1.833,116,2.01,186,1.674,190,1.833,191,1.674,192,2.059,193,2.059,194,2.059,195,2.059,196,2.059,197,2.493,198,2.059,199,2.059,200,2.059,201,2.059,202,3.067]],["title/modules/UsersModule.html",[29,1.298,36,1.675]],["body/modules/UsersModule.html",[3,0.412,4,0.339,5,0.339,11,0.045,16,0.85,17,0.972,20,0.412,21,0.074,26,0.027,27,0.035,28,0.027,29,2.003,31,1.566,33,2.985,36,2.586,147,1.959,149,2.022,203,3.383,204,2.501,205,2.75,206,2.586,207,3.383]],["title/classes/UsersResolver.html",[21,0.061,206,1.675]],["body/classes/UsersResolver.html",[3,0.198,4,0.163,5,0.163,7,0.318,8,1.052,10,1.808,11,0.046,12,1.053,14,1.603,16,0.66,20,0.198,21,0.035,22,1.123,23,0.854,24,1.808,26,0.013,27,0.021,28,0.013,38,0.754,60,0.594,66,2.424,68,1.406,71,1.703,75,1.92,95,1.893,103,2.147,104,1.531,110,2.334,111,2.334,113,0.973,116,1.663,130,0.973,132,0.973,151,0.973,184,2.274,188,1.767,190,2.764,204,2.174,205,1.324,206,1.531,208,1.324,209,2.562,210,2.562,211,2.562,212,1.629,213,1.629,214,1.629,215,3.168,216,1.629,217,2.562,218,2.562,219,1.629,220,1.629,221,1.629,222,1.629,223,1.629,224,1.629,225,2.562,226,3.168,227,3.592,228,1.629,229,1.629,230,1.629,231,1.629,232,1.629,233,1.629,234,1.629,235,1.629,236,1.629,237,1.629,238,1.629]],["title/injectables/UsersService.html",[53,0.908,204,1.469]],["body/injectables/UsersService.html",[3,0.225,4,0.185,5,0.185,7,0.361,8,1.162,11,0.046,12,1.11,14,1.702,16,0.65,17,0.532,20,0.225,21,0.04,23,0.97,24,1.919,26,0.015,27,0.023,28,0.015,53,0.917,54,0.97,66,2.173,68,1.343,71,1.973,75,2.023,102,1.483,103,2.299,104,1.691,105,1.952,106,1.952,110,2.477,111,2.477,113,1.691,116,2.225,117,1.952,120,1.952,130,1.106,132,1.106,147,1.794,149,1.106,151,1.691,152,1.505,159,1.505,161,2.301,184,2.458,188,1.952,204,1.483,239,1.505,240,1.851,241,2.83,242,1.851,243,1.851,244,1.851,245,1.851,246,1.851,247,1.851,248,1.851,249,1.851,250,1.851,251,1.851]],["title/coverage.html",[252,2.636]],["body/coverage.html",[0,1.858,1,1.503,5,0.252,6,2.044,11,0.044,18,1.318,21,0.109,26,0.02,27,0.029,28,0.02,53,1.444,55,2.044,59,1.164,61,2.044,62,2.445,68,0.815,75,1.164,76,2.044,77,2.445,96,1.734,97,2.044,98,1.503,99,2.044,121,1.318,128,1.318,147,1.032,150,2.044,166,2.044,181,2.044,184,1.318,185,2.044,190,1.503,191,2.044,204,1.318,206,1.503,208,2.044,239,2.044,252,1.734,253,2.515,254,2.515,255,2.515,256,5.464,257,4.106,258,2.515,259,4.106,260,2.515,261,4.106,262,2.044,263,2.515,264,2.044,265,2.515,266,2.515,267,2.515,268,2.515,269,2.515,270,2.515]],["title/dependencies.html",[271,2.343,272,2.74]],["body/dependencies.html",[11,0.046,17,0.927,26,0.026,27,0.034,28,0.026,38,1.495,134,2.227,175,2.625,272,2.625,273,4.668,274,3.229,275,3.229,276,3.229,277,4.668,278,3.229,279,3.229,280,3.229,281,2.625,282,3.229,283,4.2,284,3.229,285,3.229,286,3.229,287,3.229,288,3.229,289,3.229,290,3.229,291,3.229,292,3.229,293,3.229,294,3.229,295,3.229,296,3.229]],["title/miscellaneous/functions.html",[297,1.904,298,2.74]],["body/miscellaneous/functions.html",[7,0.81,11,0.04,26,0.033,27,0.04,28,0.033,262,3.372,264,4.248,297,3.372,298,3.372,299,4.148]],["title/index.html",[7,0.457,300,2.343,301,2.343]],["body/index.html",[4,0.257,11,0.044,26,0.021,27,0.029,28,0.021,39,2.091,197,2.091,252,1.774,281,2.091,302,2.572,303,2.572,304,3.601,305,2.572,306,2.572,307,2.572,308,2.572,309,2.572,310,4.156,311,2.572,312,2.572,313,2.572,314,2.572,315,5.044,316,2.572,317,2.572,318,2.572,319,4.913,320,2.572,321,2.572,322,3.601,323,2.572,324,2.572,325,2.572,326,2.572,327,3.601,328,3.601,329,2.572,330,2.572,331,2.572,332,3.601,333,3.601,334,2.572,335,2.572,336,2.572,337,2.572,338,2.572,339,2.572,340,2.572,341,2.572,342,2.572,343,2.572,344,2.572,345,2.572,346,2.572,347,2.572,348,2.572,349,2.572,350,2.572,351,2.572,352,2.572,353,2.572,354,2.572,355,2.572,356,2.572]],["title/modules.html",[31,1.769]],["body/modules.html",[11,0.04,26,0.034,27,0.04,28,0.034,30,2.882,31,1.934,35,2.497,36,2.497,357,5.242]],["title/overview.html",[358,3.107]],["body/overview.html",[2,2.158,11,0.039,26,0.033,27,0.039,28,0.033,31,1.906,54,2.158,60,1.502,358,3.347,359,4.118,360,4.118,361,4.118,362,4.118]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":256,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":267,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":257,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":265,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["15.5.0",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":360,"title":{},"body":{"overview.html":{}}}],["2.22.1",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":359,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":361,"title":{},"body":{"overview.html":{}}}],["4.1.6",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":362,"title":{},"body":{"overview.html":{}}}],["7.0.5",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["7.10.6",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["active",{"_index":64,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["age",{"_index":65,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"classes/User.html":{}}}],["amazing",{"_index":340,"title":{},"body":{"index.html":{}}}],["apitags",{"_index":133,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["apitags('employees",{"_index":136,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["apollo",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":317,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":309,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["args",{"_index":228,"title":{},"body":{"classes/UsersResolver.html":{}}}],["async",{"_index":169,"title":{},"body":{"injectables/PrismaService.html":{}}}],["author",{"_index":349,"title":{},"body":{"index.html":{}}}],["autoschemafile",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":178,"title":{},"body":{"injectables/PrismaService.html":{}}}],["backers",{"_index":341,"title":{},"body":{"index.html":{}}}],["body",{"_index":124,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["boolean",{"_index":69,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["bootstrap",{"_index":264,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":357,"title":{},"body":{"modules.html":{}}}],["building",{"_index":305,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"classes/Employee.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":60,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"classes/Employee.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"overview.html":{}}}],["constructor",{"_index":151,"title":{},"body":{"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(prismaservice",{"_index":152,"title":{},"body":{"injectables/EmployeesService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/EmployeesController.html":{},"classes/UsersResolver.html":{}}}],["constructor(usersservice",{"_index":212,"title":{},"body":{"classes/UsersResolver.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/EmployeesController.html":{}},"body":{"controllers/AppController.html":{},"controllers/EmployeesController.html":{},"coverage.html":{}}}],["controller('employees",{"_index":135,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"overview.html":{}}}],["coverage",{"_index":252,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":102,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateUserInput.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":137,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["create(createemployeedto",{"_index":107,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{}}}],["create(createuserinput",{"_index":241,"title":{},"body":{"injectables/UsersService.html":{}}}],["createemployeedto",{"_index":59,"title":{"classes/CreateEmployeeDto.html":{}},"body":{"classes/CreateEmployeeDto.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["createuser",{"_index":209,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(@args('createuserinput",{"_index":230,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(createuserinput",{"_index":214,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuserinput",{"_index":75,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["data",{"_index":161,"title":{},"body":{"injectables/EmployeesService.html":{},"injectables/UsersService.html":{}}}],["debug",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserInput.html":{},"controllers/EmployeesController.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":127,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["delete(':id",{"_index":118,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["dependencies",{"_index":272,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":197,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["development",{"_index":318,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":253,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":130,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":132,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":329,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":306,"title":{},"body":{"index.html":{}}}],["email",{"_index":78,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/User.html":{}}}],["employee",{"_index":96,"title":{"classes/Employee.html":{}},"body":{"classes/Employee.html":{},"coverage.html":{}}}],["employee.dto",{"_index":131,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts",{"_index":62,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["employee.dto.ts:2",{"_index":73,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:3",{"_index":72,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:4",{"_index":74,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:5",{"_index":70,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employees",{"_index":101,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["employees.controller",{"_index":148,"title":{},"body":{"modules/EmployeesModule.html":{}}}],["employees.service",{"_index":129,"title":{},"body":{"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{}}}],["employees/employees.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["employeescontroller",{"_index":98,"title":{"controllers/EmployeesController.html":{}},"body":{"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"coverage.html":{}}}],["employeesmodule",{"_index":35,"title":{"modules/EmployeesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmployeesModule.html":{},"modules.html":{}}}],["employeesservice",{"_index":128,"title":{"injectables/EmployeesService.html":{}},"body":{"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"coverage.html":{}}}],["entities/user.entity",{"_index":229,"title":{},"body":{"classes/UsersResolver.html":{}}}],["experience",{"_index":79,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/User.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["express",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":167,"title":{},"body":{"injectables/PrismaService.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateUserInput.html":{}}}],["false",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["field",{"_index":85,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["field(undefined",{"_index":186,"title":{},"body":{"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":103,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":104,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["findone(@args('id",{"_index":233,"title":{},"body":{"classes/UsersResolver.html":{}}}],["findone(@param('id",{"_index":140,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["findone(id",{"_index":113,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["firstname",{"_index":80,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/User.html":{}}}],["framework",{"_index":304,"title":{},"body":{"index.html":{}}}],["function",{"_index":263,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":298,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":81,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/User.html":{}}}],["get(':id",{"_index":114,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":300,"title":{"index.html":{}},"body":{}}],["graphql",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["graphqlmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["grow",{"_index":336,"title":{},"body":{"index.html":{}}}],["hello",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":346,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":353,"title":{},"body":{"index.html":{}}}],["id",{"_index":116,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":176,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserInput.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["include",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":53,"title":{"injectables/AppService.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["inputtype",{"_index":94,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["installation",{"_index":314,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":316,"title":{},"body":{"index.html":{}}}],["int",{"_index":95,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}}}],["join",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(process.cwd",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["kamil",{"_index":350,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":82,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/User.html":{}}}],["license",{"_index":356,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":333,"title":{},"body":{"index.html":{}}}],["location",{"_index":83,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/User.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":297,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":332,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":84,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/User.html":{}}}],["mode",{"_index":322,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/EmployeesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmployeesModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/EmployeesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":345,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":227,"title":{},"body":{"classes/UsersResolver.html":{}}}],["mutation(undefined",{"_index":215,"title":{},"body":{"classes/UsersResolver.html":{}}}],["myśliwiec",{"_index":351,"title":{},"body":{"index.html":{}}}],["name",{"_index":66,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":310,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":355,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":134,"title":{},"body":{"controllers/EmployeesController.html":{},"classes/UpdateEmployeeDto.html":{},"dependencies.html":{}}}],["new",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["node.js",{"_index":303,"title":{},"body":{"index.html":{}}}],["npm",{"_index":315,"title":{},"body":{"index.html":{}}}],["number",{"_index":71,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"injectables/EmployeesService.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["objecttype",{"_index":202,"title":{},"body":{"classes/User.html":{}}}],["onmoduledestroy",{"_index":170,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":171,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":334,"title":{},"body":{"index.html":{}}}],["optional",{"_index":111,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["overview",{"_index":358,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":271,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":126,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["parameters",{"_index":110,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":182,"title":{},"body":{"classes/UpdateEmployeeDto.html":{},"classes/UpdateUserInput.html":{}}}],["partialtype(createemployeedto",{"_index":183,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["partialtype(createuserinput",{"_index":189,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["patch",{"_index":125,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["patch(':id",{"_index":122,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["path",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["place",{"_index":67,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["playground",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":343,"title":{},"body":{"index.html":{}}}],["post",{"_index":108,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["prefix",{"_index":100,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["prisma/client",{"_index":175,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":168,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":147,"title":{"injectables/PrismaService.html":{}},"body":{"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["private",{"_index":159,"title":{},"body":{"injectables/EmployeesService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":324,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":302,"title":{},"body":{"index.html":{}}}],["project",{"_index":335,"title":{},"body":{"index.html":{}}}],["properties",{"_index":63,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["providers",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/EmployeesModule.html":{},"modules/UsersModule.html":{}}}],["query",{"_index":226,"title":{},"body":{"classes/UsersResolver.html":{}}}],["query(undefined",{"_index":217,"title":{},"body":{"classes/UsersResolver.html":{}}}],["read",{"_index":344,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":105,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":144,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["remove(id",{"_index":117,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"injectables/UsersService.html":{}}}],["removeuser",{"_index":210,"title":{},"body":{"classes/UsersResolver.html":{}}}],["removeuser(@args('id",{"_index":237,"title":{},"body":{"classes/UsersResolver.html":{}}}],["removeuser(id",{"_index":221,"title":{},"body":{"classes/UsersResolver.html":{}}}],["repository",{"_index":313,"title":{},"body":{"index.html":{}}}],["resolver",{"_index":225,"title":{},"body":{"classes/UsersResolver.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":319,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":307,"title":{},"body":{"index.html":{}}}],["server",{"_index":281,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["side",{"_index":308,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"injectables/PrismaService.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":338,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":299,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":56,"title":{},"body":{"injectables/AppService.html":{}}}],["src/employees/dto/create",{"_index":61,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"coverage.html":{}}}],["src/employees/dto/update",{"_index":181,"title":{},"body":{"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["src/employees/employees.controller.ts",{"_index":99,"title":{},"body":{"controllers/EmployeesController.html":{},"coverage.html":{}}}],["src/employees/employees.controller.ts:13",{"_index":109,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["src/employees/employees.controller.ts:18",{"_index":112,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["src/employees/employees.controller.ts:23",{"_index":115,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["src/employees/employees.controller.ts:28",{"_index":123,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["src/employees/employees.controller.ts:33",{"_index":119,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["src/employees/employees.module.ts",{"_index":146,"title":{},"body":{"modules/EmployeesModule.html":{}}}],["src/employees/employees.service.ts",{"_index":150,"title":{},"body":{"injectables/EmployeesService.html":{},"coverage.html":{}}}],["src/employees/employees.service.ts:13",{"_index":154,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["src/employees/employees.service.ts:19",{"_index":155,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["src/employees/employees.service.ts:23",{"_index":156,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["src/employees/employees.service.ts:31",{"_index":158,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["src/employees/employees.service.ts:40",{"_index":157,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["src/employees/employees.service.ts:7",{"_index":153,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["src/employees/entities/employee.entity.ts",{"_index":97,"title":{},"body":{"classes/Employee.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":262,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.service",{"_index":149,"title":{},"body":{"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":166,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:12",{"_index":173,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:5",{"_index":172,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:9",{"_index":174,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/schema.gql",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["src/users/dto/create",{"_index":76,"title":{},"body":{"classes/CreateUserInput.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":185,"title":{},"body":{"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":191,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:10",{"_index":199,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:12",{"_index":193,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:14",{"_index":201,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:16",{"_index":196,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:18",{"_index":200,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:20",{"_index":192,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:22",{"_index":194,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":198,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":195,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.module.ts",{"_index":203,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.resolver.ts",{"_index":208,"title":{},"body":{"classes/UsersResolver.html":{},"coverage.html":{}}}],["src/users/users.resolver.ts:12",{"_index":216,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:17",{"_index":219,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:22",{"_index":220,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:27",{"_index":224,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:32",{"_index":222,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:8",{"_index":213,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.service.ts",{"_index":239,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:13",{"_index":242,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":243,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":244,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:31",{"_index":246,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:40",{"_index":245,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:7",{"_index":240,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":320,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":323,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":325,"title":{},"body":{"index.html":{}}}],["started",{"_index":301,"title":{"index.html":{}},"body":{}}],["starter",{"_index":312,"title":{},"body":{"index.html":{}}}],["statements",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":347,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"controllers/EmployeesController.html":{},"classes/User.html":{}}}],["super",{"_index":177,"title":{},"body":{"injectables/PrismaService.html":{}}}],["support",{"_index":339,"title":{},"body":{"index.html":{}}}],["swagger",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":328,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":331,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":330,"title":{},"body":{"index.html":{}}}],["tests",{"_index":327,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":337,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":179,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":180,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.employeesservice.create(createemployeedto",{"_index":138,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["this.employeesservice.findall",{"_index":139,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["this.employeesservice.findone(+id",{"_index":141,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["this.employeesservice.remove(+id",{"_index":145,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["this.employeesservice.update(+id",{"_index":143,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["this.prismaservice.employee.create",{"_index":160,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["this.prismaservice.employee.delete",{"_index":165,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["this.prismaservice.employee.findmany",{"_index":162,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["this.prismaservice.employee.findunique",{"_index":163,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["this.prismaservice.employee.update",{"_index":164,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["this.prismaservice.user.create",{"_index":247,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaservice.user.delete",{"_index":251,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaservice.user.findmany",{"_index":248,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaservice.user.findunique",{"_index":249,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaservice.user.update",{"_index":250,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserinput",{"_index":231,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findall",{"_index":232,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findone(id",{"_index":234,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.remove(id",{"_index":238,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.update(updateuserinput.id",{"_index":236,"title":{},"body":{"classes/UsersResolver.html":{}}}],["tools",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["touch",{"_index":348,"title":{},"body":{"index.html":{}}}],["true",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":354,"title":{},"body":{"index.html":{}}}],["type",{"_index":68,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateUserInput.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typescript",{"_index":311,"title":{},"body":{"index.html":{}}}],["ui",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":326,"title":{},"body":{"index.html":{}}}],["update",{"_index":106,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":142,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["update(id",{"_index":120,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"injectables/UsersService.html":{}}}],["updateemployeedto",{"_index":121,"title":{"classes/UpdateEmployeeDto.html":{}},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["updateuser",{"_index":211,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuser(@args('updateuserinput",{"_index":235,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuser(updateuserinput",{"_index":223,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuserinput",{"_index":184,"title":{"classes/UpdateUserInput.html":{}},"body":{"classes/UpdateUserInput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user",{"_index":190,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["user.input",{"_index":188,"title":{},"body":{"classes/UpdateUserInput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.input.ts",{"_index":77,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["user.input.ts:10",{"_index":87,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:12",{"_index":93,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:14",{"_index":90,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:16",{"_index":92,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:18",{"_index":86,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:20",{"_index":88,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:6",{"_index":89,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:7",{"_index":187,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:8",{"_index":91,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["users",{"_index":218,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users.resolver",{"_index":207,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":205,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["users/users.module",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["usersmodule",{"_index":36,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{}}}],["usersresolver",{"_index":206,"title":{"classes/UsersResolver.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["usersservice",{"_index":204,"title":{"injectables/UsersService.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["watch",{"_index":321,"title":{},"body":{"index.html":{}}}],["website",{"_index":352,"title":{},"body":{"index.html":{}}}],["world",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":342,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EmployeesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { join } from 'path';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { EmployeesModule } from './employees/employees.module';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [EmployeesModule, UsersModule, GraphQLModule.forRoot({\n    debug: false,\n    playground: true,\n    include: [UsersModule],\n    autoSchemaFile: join(process.cwd(), 'src/schema.gql'),\n  })],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeeDto.html":{"url":"classes/CreateEmployeeDto.html","title":"class - CreateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employees/dto/create-employee.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                age\n                            \n                            \n                                name\n                            \n                            \n                                place\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/employees/dto/create-employee.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/employees/dto/create-employee.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/employees/dto/create-employee.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            place\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/employees/dto/create-employee.dto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateEmployeeDto {\n    name: string\n    age: number\n    place: string\n    active: boolean\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                email\n                            \n                            \n                                experience\n                            \n                            \n                                firstname\n                            \n                            \n                                gender\n                            \n                            \n                                lastname\n                            \n                            \n                                location\n                            \n                            \n                                mobile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.input.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.input.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            experience\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.input.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.input.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.input.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.input.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.input.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.input.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Int, Field } from '@nestjs/graphql';\n\n@InputType()\nexport class CreateUserInput {\n    @Field()\n    firstname: string\n    @Field()\n    lastname: string\n    @Field()\n    email: string\n    @Field()\n    mobile: string\n    @Field()\n    gender: string\n    @Field()\n    location: string\n    @Field()\n    age: number\n    @Field()\n    experience: number\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Employee.html":{"url":"classes/Employee.html","title":"class - Employee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Employee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employees/entities/employee.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Employee {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmployeesController.html":{"url":"controllers/EmployeesController.html","title":"controller - EmployeesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmployeesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employees/employees.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                employees\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createEmployeeDto: CreateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/employees/employees.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEmployeeDto\n                                    \n                                                CreateEmployeeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/employees/employees.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/employees/employees.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/employees/employees.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateEmployeeDto: UpdateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/employees/employees.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEmployeeDto\n                                    \n                                                UpdateEmployeeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { EmployeesService } from './employees.service';\nimport { CreateEmployeeDto } from './dto/create-employee.dto';\nimport { UpdateEmployeeDto } from './dto/update-employee.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller('employees')\n@ApiTags('Employees')\nexport class EmployeesController {\n  constructor(private readonly employeesService: EmployeesService) {}\n\n  @Post()\n  create(@Body() createEmployeeDto: CreateEmployeeDto) {\n    return this.employeesService.create(createEmployeeDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.employeesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.employeesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateEmployeeDto: UpdateEmployeeDto) {\n    return this.employeesService.update(+id, updateEmployeeDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.employeesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeesModule.html":{"url":"modules/EmployeesModule.html","title":"module - EmployeesModule","body":"\n                   \n\n\n\n\n    Modules\n    EmployeesModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/employees/employees.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmployeesService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmployeesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EmployeesService } from './employees.service';\nimport { EmployeesController } from './employees.controller';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Module({\n  controllers: [EmployeesController],\n  providers: [EmployeesService, PrismaService]\n})\nexport class EmployeesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeesService.html":{"url":"injectables/EmployeesService.html","title":"injectable - EmployeesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EmployeesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employees/employees.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/employees/employees.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createEmployeeDto: CreateEmployeeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/employees/employees.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEmployeeDto\n                                    \n                                                CreateEmployeeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/employees/employees.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/employees/employees.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/employees/employees.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateEmployeeDto: UpdateEmployeeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/employees/employees.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEmployeeDto\n                                    \n                                                UpdateEmployeeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateEmployeeDto } from './dto/create-employee.dto';\nimport { UpdateEmployeeDto } from './dto/update-employee.dto';\n\n@Injectable()\nexport class EmployeesService {\n\n  constructor(\n    private readonly prismaService: PrismaService\n    ) {}\n\n  create(createEmployeeDto: CreateEmployeeDto) {\n    return this.prismaService.employee.create({\n      data: createEmployeeDto,\n    });\n  }\n\n  findAll() {\n    return this.prismaService.employee.findMany();\n  }\n\n  findOne(id: number) {\n    return this.prismaService.employee.findUnique({\n      where: {\n        id: id,\n      },\n    });\n  }\n\n  update(id: number, updateEmployeeDto: UpdateEmployeeDto) {\n    return this.prismaService.employee.update({\n      where: {\n        id: id,\n      },\n      data: updateEmployeeDto\n    });\n  }\n\n  remove(id: number) {\n    return this.prismaService.employee.delete({\n      where: {\n        id: id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PrismaClient } from \".prisma/client\";\nimport { Injectable, OnModuleDestroy, OnModuleInit } from \"@nestjs/common\";\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n    constructor() {\n        super();\n    }\n    async onModuleInit() {\n        await this.$connect();\n    }\n    async onModuleDestroy() {\n        await this.$disconnect();\n    }\n\n    \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeDto.html":{"url":"classes/UpdateEmployeeDto.html","title":"class - UpdateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employees/dto/update-employee.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateEmployeeDto } from './create-employee.dto';\n\nexport class UpdateEmployeeDto extends PartialType(CreateEmployeeDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInput.html":{"url":"classes/UpdateUserInput.html","title":"class - UpdateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/update-user.input.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserInput } from './create-user.input';\nimport { InputType, Field, Int, PartialType } from '@nestjs/graphql';\n\n@InputType()\nexport class UpdateUserInput extends PartialType(CreateUserInput) {\n  @Field(() => Int)\n  id: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                email\n                            \n                            \n                                experience\n                            \n                            \n                                firstname\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                lastname\n                            \n                            \n                                location\n                            \n                            \n                                mobile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            experience\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int } from '@nestjs/graphql';\n\n@ObjectType()\nexport class User {\n  @Field(() => Int, { description: 'Id' })\n  id: number;\n  @Field()\n    firstname: string\n    @Field()\n    lastname: string\n    @Field()\n    email: string\n    @Field()\n    mobile: string\n    @Field()\n    gender: string\n    @Field()\n    location: string\n    @Field()\n    age: number\n    @Field()\n    experience: number\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersResolver } from './users.resolver';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Module({\n  providers: [UsersResolver, UsersService, PrismaService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersResolver.html":{"url":"classes/UsersResolver.html","title":"class - UsersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                removeUser\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.resolver.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateUser(createUserInput: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/users/users.resolver.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserInput\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'users'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.resolver.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'user'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.resolver.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeUser\n                        \n                        \n                    \n                \n            \n            \n                \nremoveUser(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/users/users.resolver.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUser(updateUserInput: UpdateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/users/users.resolver.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserInput\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args, Int } from '@nestjs/graphql';\nimport { UsersService } from './users.service';\nimport { User } from './entities/user.entity';\nimport { CreateUserInput } from './dto/create-user.input';\nimport { UpdateUserInput } from './dto/update-user.input';\n\n@Resolver(() => User)\nexport class UsersResolver {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Mutation(() => User)\n  createUser(@Args('createUserInput') createUserInput: CreateUserInput) {\n    return this.usersService.create(createUserInput);\n  }\n\n  @Query(() => [User], { name: 'users' })\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Query(() => User, { name: 'user' })\n  findOne(@Args('id', { type: () => Int }) id: number) {\n    return this.usersService.findOne(id);\n  }\n\n  @Mutation(() => User)\n  updateUser(@Args('updateUserInput') updateUserInput: UpdateUserInput) {\n    return this.usersService.update(updateUserInput.id, updateUserInput);\n  }\n\n  @Mutation(() => User)\n  removeUser(@Args('id', { type: () => Int }) id: number) {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createUserInput: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserInput\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserInput: UpdateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserInput\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateUserInput } from './dto/create-user.input';\nimport { UpdateUserInput } from './dto/update-user.input';\n\n@Injectable()\nexport class UsersService {\n\n  constructor(\n    private readonly prismaService: PrismaService\n  ) {}\n\n  create(createUserInput: CreateUserInput) {\n    return this.prismaService.user.create({\n      data: createUserInput\n    });\n  }\n\n  findAll() {\n    return this.prismaService.user.findMany();\n  }\n\n  findOne(id: number) {\n    return this.prismaService.user.findUnique({\n      where: {\n        id: id,\n      },\n    });\n  }\n\n  update(id: number, updateUserInput: UpdateUserInput) {\n    return this.prismaService.user.update({\n      where: {\n        id: id,\n      },\n      data: updateUserInput\n    });\n  }\n\n  remove(id: number) {\n    return this.prismaService.user.delete({\n      where: {\n        id: id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/employees/dto/create-employee.dto.ts\n            \n            class\n            CreateEmployeeDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/employees/dto/update-employee.dto.ts\n            \n            class\n            UpdateEmployeeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/employees/employees.controller.ts\n            \n            controller\n            EmployeesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/employees/employees.service.ts\n            \n            injectable\n            EmployeesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/employees/entities/employee.entity.ts\n            \n            class\n            Employee\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.input.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.input.ts\n            \n            class\n            UpdateUserInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/users.resolver.ts\n            \n            class\n            UsersResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/graphql : ^7.10.6\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @prisma/client : ^2.22.1\n        \n            apollo-server-express : ^2.24.0\n        \n            graphql : ^15.5.0\n        \n            graphql-tools : ^7.0.5\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeesModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
